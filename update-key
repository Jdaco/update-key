#!/bin/bash

declare -a crypts
declare -a umounts
declare -a temps

trap finish EXIT

function clean_crypts() {
    for crypt_name in "${crypts[@]}"; do
        cryptsetup luksClose "${crypt_name}"
    done
}

function clean_mounts() {
    for dir in "${umounts[@]}"; do
        if mountpoint -q "${dir}"; then
            umount "${dir}"
        fi
    done;

}

function clean_temps() {
    for dir in "${temps[@]}"; do
        if [[ -d "${dir}" ]]; then
            rmdir "${dir}"
        fi
    done
}

function finish() {
    clean_mounts
    clean_crypts
    clean_temps
}


function choice() {
    declare lines="$1"
    declare remark="$2"
    declare variable_name="$3"
    declare user_choice=0
    declare length=$(echo "$lines" | wc -l)

    echo "$lines" | nl -s ") " -w 2
    while [[ $user_choice -le 0 ]] || [[ $user_choice -gt $length ]]; do
        echo -n "$remark" ; read user_choice
        if [[ $user_choice -gt 0 && $user_choice -le $length ]]; then
            declare temp=$(echo "$lines" | sed -n ${user_choice}p)
            eval $variable_name=\$temp
        else
            echo "That's not a valid option"
        fi
    done
}

function crypt_open() {
    declare disk="${1}"
    declare name="${2}"

    cryptsetup luksOpen "${disk}" "${name}"
    crypts+=("${name}")
}

function tempdir() {
    path=$(mktemp -d)
    temps+=(${path})
    echo ${path}
}

function trapped_mount() {
    declare device="${1}"
    declare path="${2}"

    mount "${device}" "${path}"
    umounts+=("${path}")
}



function run_hook() {
    choice "$(blkid -o device)" "Choose root device: " chosen_drive
    choice "$(blkid -o device)" "Choose boot device: " chosen_boot
    choice "$(blkid)" "Choose a key device: " chosen_id
    chosen_id=$(echo "$chosen_id" | sed -E 's,^.* UUID="([a-f0-9-]+)".*$,\1,')

    crypt_open /dev/dis/by-uuid/test key
    crypt_open no_key aahhhh

    key_dir=$(tempdir)
    rc_dir=$(tempdir)

    crypt_open /dev/disk/by-uuid/${chosen_id} key
    trapped_mount /dev/mapper/key "${key_dir}"

    cryptsetup luksOpen "${chosen_drive}" rc
    trapped_mount /dev/mapper/rc "${rc_dir}"

    trapped_mount "${chosen_boot}" "${rc_dir}"/boot

    arch-chroot "${rc_dir}" sed -n -i -E 's,(/dev/disk/by-uuid/)[0-9a-f-]+(:key ),\1'"${chosen_id}"'\2,' /boot/syslinux/syslinux.cfg && syslinux-install_update -i -a -m
}
